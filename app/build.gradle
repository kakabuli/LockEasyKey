apply plugin: 'com.android.application'
apply plugin: 'com.huawei.agconnect'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'bugly'   //添加bugly的符号表
apply plugin: 'com.mob.sdk'

greendao {
    schemaVersion rootProject.ext.greendao_schemaVersion// 数据库版本号
    daoPackage 'com.philips.easykey.lock.utils.greenDao.db'//自动生成的dao的包名，包名默认是entity所在的包；
    targetGenDir 'src/main/java'//生成数据库文件的目录
}

bugly {
    appId = "37003f935b"
    appKey = "4a1dfdd3-e49b-4200-b22d-c99690976ee9"
    debug = true
    execute = rootProject.ext.isRelease
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.appId["app"]
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        flavorDimensions "versionCode"
        multiDexEnabled true
        ndk { //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so） 去掉对X86的手机So的支持
//            abiFilters "armeabi-v7a", "arm64-v8a", "x86"
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
        manifestPlaceholders = [
                GETUI_APPID    : "0Xktb3BmI77e832N4GKu5",
                //GETUI_APP_KEY   : "HdgiZGfQLr5qNcTa51B0B2",
                //GETUI_APP_SECRET: "cWHc94l8sa7HE3KrnuNjS9",

//                HUAWEI_APP_ID   : "100038281",

                XIAOMI_APP_ID   : "2882303761519924663",
                XIAOMI_APP_KEY  : "5861992467663",

                OPPO_APP_KEY    : "47d960a414264f9e946210361ba4c5e2",
                OPPO_APP_SECRET : "2333ad8c1b6649939ce436847dd9f7a1",

                MEIZU_APP_ID    : "118878",
                MEIZU_APP_KEY   : "6121ecee371449c2b536b58452d78cb8",

                VIVO_APP_ID     : "105486535",
                VIVO_APP_KEY    : "521f130d408815f5c591dfc77d88c0b7"
        ]

    }

    dexOptions {
        preDexLibraries = false
    }

    productFlavors {
        PhilipsEasyKey {
            applicationId rootProject.ext.appId["app"]
            if(rootProject.ext.env){
                buildConfigField('String', 'HTTP_HOST', rootProject.ext.HOST.HTTPS)
                buildConfigField('String', 'MQTT_HOST', rootProject.ext.HOST.MQTT)
                buildConfigField('String', 'SIP_HOST', rootProject.ext.HOST.LINPHONE_SIP)
            }else{
                buildConfigField('String', 'HTTP_HOST', rootProject.ext.HOST.HTTPS_DEV)
                buildConfigField('String', 'MQTT_HOST', rootProject.ext.HOST.MQTT_DEV)
                buildConfigField('String', 'SIP_HOST', rootProject.ext.HOST.LINPHONE_SIP_DEV)
            }
            buildConfigField('String', 'HTTP_VERSION', rootProject.ext.HOST.VERSION)
            buildConfigField('Boolean','IS_OVERSEAS', rootProject.ext.IS_OVERSEAS)
        }
    }

    signingConfigs {
        debug {
            v1SigningEnabled true
            v2SigningEnabled true
            keyAlias 'Philips_EasyKey'
            keyPassword 'philips2021'
            storeFile file('../Philips_EasyKey.jks')
            storePassword 'philips2021'
        }

        release {
            storeFile
            storePassword
            keyAlias
            keyPassword
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    //自定义输出包名的设置
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def date = new Date().format("yyyyMMdd" , TimeZone.getDefault())
            if(variant.buildType.name == 'debug'){
                outputFileName = "Philips_EasyKey+_debug${date}_${versionCode}_${versionName}.apk"
            }
            if(variant.buildType.name == 'release'){
                outputFileName = "Philips_EasyKey+_${versionCode}_${versionName}.apk"
            }
        }
    }

    buildTypes {
        release {
            debuggable rootProject.ext.isDeBug
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable rootProject.ext.isDeBug  //启用debug的buildType配置
        }
    }

    compileOptions {

        sourceCompatibility JavaVersion.VERSION_1_8

        targetCompatibility JavaVersion.VERSION_1_8

    }
    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }
    task nativeLibsToJar(type: Zip, description: "create a jar archive of the native libs") {
        destinationDir file("$projectDir/libs")
        baseName "Native_Libs2"
        extension "jar"
        from fileTree(dir: "libs", include: "**/*.so")
        into "lib"
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn(nativeLibsToJar)
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    // dataBinding新版使用这个
//    buildFeatures{
//        dataBinding = true
//        // for view binding :
//        // viewBinding = true
//    }

}

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation files('libs/Native_Libs2.jar')
    implementation files('libs/GetuiSDK-support-MZP-1.1.1.jar')
    implementation files('libs/GetuiSDK-support-STP-1.0.1.jar')
    implementation files('libs/GetuiSDK-support-VIVO-1.0.5.jar')
    implementation files('libs/GetuiSDK-support-OPPO-1.0.7.jar')

//    implementation 'com.getui:sdk:2.14.1.0'
    implementation 'com.getui:gtsdk:3.2.3.0'
    implementation 'com.getui:gtc:3.1.4.0'
    implementation 'com.huawei.hms:push:5.1.1.301'
    implementation project(':push:pushsdk_xiaomi')

    implementation files('libs/xm-codec.jar')
    implementation files('libs/xm-support.jar')

    testImplementation 'junit:junit:4.13.2'
    implementation "androidx.constraintlayout:constraintlayout:${rootProject.ext.constraintlayoutVersion}"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation "androidx.test.espresso:espresso-core:${rootProject.ext.espresso_core_version}"

    //----------------------------网络请求依赖----------------------------------
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    //会解析list data为返回[]类型和boolean类型返回Integer 1和0 会转会boolean型
    implementation 'org.ligboy.retrofit2:converter-fastjson-android:2.2.0'
    //okhttp拦截器
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'

    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation 'com.yqritc:recyclerview-flexibledivider:1.4.0'

    //Rxjava rx Android
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.0'

    //mqtt
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'

    //zxing
    implementation 'com.king.zxing:zxing-lite:2.0.3'

    implementation 'com.bm.photoview:library:1.4.1'
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    implementation 'com.yarolegovich:discrete-scrollview:1.4.9'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'

    // 数据库
    implementation 'org.greenrobot:greendao:3.3.0'
    implementation 'net.zetetic:android-database-sqlcipher:4.4.3@aar'
    implementation 'androidx.sqlite:sqlite:2.1.0'

    implementation project(':library:WheelPicker')
    implementation project(path: ':library:Common')
    implementation project(path: ':keep_alive')
    implementation project(':Core')
    implementation(name: 'esptouch', ext: 'aar')

    //文件下载的SDK
    implementation 'com.liulishuo.filedownloader:library:1.7.7'

    implementation 'com.tencent.bugly:crashreport:3.3.92'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:nativecrashreport:3.9.1'

    implementation 'com.github.tbruyelle:rxpermissions:0.11'

    // 工具类库
    // if u use AndroidX, use the following
    implementation 'com.blankj:utilcodex:1.30.6'
    //相册图片选择器
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.6.1'
    implementation 'androidx.biometric:biometric:1.1.0-rc01'

    // use this to fix the guava conflict. 修复冲突
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'

    // Android - Use Guava in your implementation only:
    // 因为zxing-lite这个库使用到guava，在部分手机上没有集成这个，也会导致出现问题，所以集成进来
    implementation('com.google.guava:guava:30.1.1-jre')
    // 权限请求帮助库
    // For developers using AndroidX in their applications
    implementation 'pub.devrel:easypermissions:3.0.0'
    // basePopup
    implementation 'io.github.razerdp:BasePopup:2.3.0'
    // Gson
    implementation 'com.google.code.gson:gson:2.8.6'
    // 微信
    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:6.7.4'
}
